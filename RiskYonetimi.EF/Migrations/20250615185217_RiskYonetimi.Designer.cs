// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RiskYonetimi.EF.Data;

#nullable disable

namespace RiskYonetimi.EF.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250615185217_RiskYonetimi")]
    partial class RiskYonetimi
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RiskYonetim.Domain.Model.Anlasma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("BitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("SirketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SirketId");

                    b.ToTable("Anlasmas");
                });

            modelBuilder.Entity("RiskYonetim.Domain.Model.AnlasmaIl", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnlasmaId")
                        .HasColumnType("int");

                    b.Property<int>("IlId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnlasmaId");

                    b.HasIndex("IlId");

                    b.ToTable("AnlasmaIls");
                });

            modelBuilder.Entity("RiskYonetim.Domain.Model.AnlasmaKonulari", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnlasmaId")
                        .HasColumnType("int");

                    b.Property<int>("KonuId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnlasmaId");

                    b.HasIndex("KonuId");

                    b.ToTable("AnlasmaKonus");
                });

            modelBuilder.Entity("RiskYonetim.Domain.Model.IlAd", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("IlAdi")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("IlAdis");
                });

            modelBuilder.Entity("RiskYonetim.Domain.Model.IsKonu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Konu")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("IsKonus");
                });

            modelBuilder.Entity("RiskYonetim.Domain.Model.IsOrtagi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("IletisimKisi")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Tip")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IsOrtagis");
                });

            modelBuilder.Entity("RiskYonetim.Domain.Model.RiskAnalizi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Aciklama")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("AnlasmaId")
                        .HasColumnType("int");

                    b.Property<int>("RiskPuani")
                        .HasColumnType("int");

                    b.Property<string>("RiskSeviyesi")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Tarih")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AnlasmaId");

                    b.ToTable("RiskAnalizis");
                });

            modelBuilder.Entity("RiskYonetim.Domain.Model.Sirket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Ad")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Telefon")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VergiNo")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("YetkiliKisi")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Sirkets");
                });

            modelBuilder.Entity("RiskYonetim.Domain.Model.Anlasma", b =>
                {
                    b.HasOne("RiskYonetim.Domain.Model.Sirket", "Sirket")
                        .WithMany("Anlasmalar")
                        .HasForeignKey("SirketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sirket");
                });

            modelBuilder.Entity("RiskYonetim.Domain.Model.AnlasmaIl", b =>
                {
                    b.HasOne("RiskYonetim.Domain.Model.Anlasma", "Anlasma")
                        .WithMany("AnlasmaIller")
                        .HasForeignKey("AnlasmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RiskYonetim.Domain.Model.IlAd", "Il")
                        .WithMany("AnlasmaIller")
                        .HasForeignKey("IlId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anlasma");

                    b.Navigation("Il");
                });

            modelBuilder.Entity("RiskYonetim.Domain.Model.AnlasmaKonulari", b =>
                {
                    b.HasOne("RiskYonetim.Domain.Model.Anlasma", "Anlasma")
                        .WithMany("AnlasmaKonular")
                        .HasForeignKey("AnlasmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RiskYonetim.Domain.Model.IsKonu", "Konu")
                        .WithMany("AnlasmaKonular")
                        .HasForeignKey("KonuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anlasma");

                    b.Navigation("Konu");
                });

            modelBuilder.Entity("RiskYonetim.Domain.Model.RiskAnalizi", b =>
                {
                    b.HasOne("RiskYonetim.Domain.Model.Anlasma", "Anlasma")
                        .WithMany("RiskAnalizleri")
                        .HasForeignKey("AnlasmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anlasma");
                });

            modelBuilder.Entity("RiskYonetim.Domain.Model.Anlasma", b =>
                {
                    b.Navigation("AnlasmaIller");

                    b.Navigation("AnlasmaKonular");

                    b.Navigation("RiskAnalizleri");
                });

            modelBuilder.Entity("RiskYonetim.Domain.Model.IlAd", b =>
                {
                    b.Navigation("AnlasmaIller");
                });

            modelBuilder.Entity("RiskYonetim.Domain.Model.IsKonu", b =>
                {
                    b.Navigation("AnlasmaKonular");
                });

            modelBuilder.Entity("RiskYonetim.Domain.Model.Sirket", b =>
                {
                    b.Navigation("Anlasmalar");
                });
#pragma warning restore 612, 618
        }
    }
}
